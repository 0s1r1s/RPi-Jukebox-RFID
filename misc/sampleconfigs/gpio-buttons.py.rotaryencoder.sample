#!/usr/bin/python3
import RPi.GPIO as GPIO
from signal import pause
from subprocess import check_call

# This script is compatible with any I2S DAC e.g. from Hifiberry, Justboom, ES9023, PCM5102A
# Only Buttons that have dissimilar functions as the two encoder are enabled

# this script has the `pull_up=True` for all pins. See the following link for additional info: 
# https://github.com/MiczFlor/RPi-Jukebox-RFID/issues/259#issuecomment-430007446


def def_shutdown():
    check_call("./scripts/playout_controls.sh -c=shutdown", shell=True)

def def_halt():
    check_call("./scripts/playout_controls.sh -c=playerpause", shell=True)

# Flexible Pinout
shutGPIO = 3
haltGPIO = 27
# Classic Pinout
#haltGPIO = 21
bouncetime = 200

GPIO.setmode(GPIO.BCM)
GPIO.setup(shutGPIO, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(haltGPIO, GPIO.IN, pull_up_down=GPIO.PUD_UP)

if __name__ == "__main__":
    try:
		GPIO.add_event_detect(shutGPIO, GPIO.FALLING, callback=def_shutdown, bouncetime=bouncetime)
		GPIO.add_event_detect(haltGPIO, GPIO.FALLING, callback=def_halt, bouncetime=bouncetime)
        pause()
    except KeyboardInterrupt:
		GPIO.remove_event_detect(shutGPIO)
		GPIO.remove_event_detect(haltGPIO)
		GPIO.cleanup()
        print("\nExiting button decoder\n")
        # exit the application
        sys.exit(0)